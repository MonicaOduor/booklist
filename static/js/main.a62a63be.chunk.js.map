{"version":3,"sources":["components/BookCard.js","pages/Books.js","pages/Create.js","components/Layout.js","App.js","index.js"],"names":["BookCard","book","handleDelete","Card","elevation","CardHeader","action","IconButton","onClick","id","DeleteOutlined","title","subheader","author","genre","CardContent","Typography","variant","color","description","Books","useState","books","setBooks","useEffect","fetch","then","res","json","data","a","method","newBooks","filter","Container","Grid","container","spacing","map","item","xs","md","lg","Create","field","mt","mb","display","history","useHistory","setTitle","setGenre","setAuthor","setDescription","titleError","setTitleError","genreError","setGenreError","authorError","setAuthorError","descriptionError","setDescriptionError","category","setCategory","component","gutterBottom","noValidate","autoComplete","onSubmit","e","preventDefault","headers","body","JSON","stringify","push","TextField","onChange","target","value","sx","label","fullWidth","required","error","multiline","rows","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","Button","type","endIcon","Layout","children","menuItems","text","icon","SubjectOutlined","path","AddCircleOutlineOutlined","classes","page","background","width","drawer","root","active","location","useLocation","Box","Drawer","anchor","List","ListItem","button","pathname","ListItemIcon","ListItemText","primary","style","theme","createTheme","palette","main","secondary","pink","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","App","ThemeProvider","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a62a63be.chunk.js","sourcesContent":["import { Avatar, Card, CardContent, CardHeader, IconButton, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nimport { DeleteOutlined } from \"@material-ui/icons\";\n\nexport default function BookCard({ book, handleDelete }) {\n  return (\n    <div>\n      <Card elevation={1}>\n        <CardHeader\n          action={\n            <IconButton onClick={() => handleDelete(book.id) }>\n              <DeleteOutlined />\n            </IconButton>\n          }\n            title={book.title}\n            subheader={book.author + \" | \" + book.genre}\n\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n\n            {book.description}\n          </Typography>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","import { Container, Grid } from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport BookCard from \"../components/BookCard\";\n\nexport default function Books() {\n  const [books, setBooks] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8000/books\")\n      .then((res) => res.json())\n      .then((data) => setBooks(data));\n  }, []);\n\n  const handleDelete = async (id) => {\n    await fetch('http://localhost:8000/books/' + id, {\n      method: 'DELETE'\n    })\n    const newBooks = books.filter(book => book.id !== id)\n    setBooks(newBooks)\n  }\n  return (\n    <Container>\n      <Grid container spacing={3}>\n        {books.map((book) => (\n          <Grid item xs={12} md={6} lg={4} key={book.id}>\n            <BookCard book={book} handleDelete={handleDelete}/>\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Typography,\n  Button,\n  Container,\n  TextField,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  FormLabel,\n  FormControl,\n} from \"@material-ui/core\";\nimport KeyboardArrowRightIcon from \"@mui/icons-material/KeyboardArrowRight\";\nimport { SxProps } from \"@mui/material/styles\";\n\nexport default function Create() {\n  const BtnStyle = {};\n  const field = {\n    mt: \"20px\",\n    mb: \"20px\",\n    display: \"block\",\n  };\n\n  const history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [titleError, setTitleError] = useState(false);\n  const [genreError, setGenreError] = useState(false);\n  const [authorError, setAuthorError] = useState(false);\n  const [descriptionError, setDescriptionError] = useState(false);\n  const [category, setCategory] = useState(\"Fiction\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setTitleError(false);\n    setGenreError(false);\n    setAuthorError(false);\n    setDescriptionError(false);\n\n    if (title == \"\") {\n      setTitleError(true);\n    }\n    if (genre == \"\") {\n      setGenreError(true);\n    }\n    if (author == \"\") {\n      setAuthorError(true);\n    }\n    if (description == \"\") {\n      setDescriptionError(true);\n    }\n    if (title && author && genre && description) {\n      fetch(\"http://localhost:8000/books\", {\n        method: \"POST\",\n        headers: { \"Content-type\": \"application/json\" },\n        body: JSON.stringify({ title, genre, author, description, category }),\n      }).then(() => history.push(\"/\"));\n    }\n  };\n\n  return (\n    <Container>\n      <Typography\n        variant=\"h6\"\n        component=\"h2\"\n        gutterBottom\n        color=\"textSecondary\"\n      >\n        Add a new book\n      </Typography>\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <TextField\n          onChange={(e) => setTitle(e.target.value)}\n          sx={field}\n          label=\"Title\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          fullWidth\n          required\n          error={titleError}\n        />\n        <TextField\n          onChange={(e) => setAuthor(e.target.value)}\n          sx={field}\n          label=\"Author\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          fullWidth\n          required\n          error={authorError}\n        />\n        <TextField\n          onChange={(e) => setGenre(e.target.value)}\n          sx={field}\n          label=\"Genre\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          fullWidth\n          required\n          error={genreError}\n        />\n        <TextField\n          onChange={(e) => setDescription(e.target.value)}\n          sx={field}\n          label=\"Description\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          multiline\n          rows={4}\n          fullWidth\n          required\n          error={descriptionError}\n        />\n        <FormControl sx={field}>\n          <FormLabel>Book Category</FormLabel>\n\n          <RadioGroup\n            value={category}\n            onChange={(e) => setCategory(e.target.value)}\n          >\n            <FormControlLabel\n              value=\"fiction\"\n              control={<Radio />}\n              label=\"Fiction\"\n            />\n            <FormControlLabel\n              value=\"history\"\n              control={<Radio />}\n              label=\"History\"\n            />\n            <FormControlLabel\n              value=\"horror\"\n              control={<Radio />}\n              label=\"Horror\"\n            />\n          </RadioGroup>\n        </FormControl>\n\n        <Button\n          type=\"submit\"\n          color=\"secondary\"\n          variant=\"contained\"\n          endIcon={<KeyboardArrowRightIcon />}\n          sx={BtnStyle}\n        >\n          Submit\n        </Button>\n      </form>\n      <br />\n    </Container>\n  );\n}\n","import { AddCircleOutlineOutlined, SubjectOutlined } from \"@material-ui/icons\";\nimport {\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport React from \"react\";\n\nexport default function Layout({ children }) {\n  const menuItems = [\n    {\n      text: \"My Books\",\n      icon: <SubjectOutlined color=\"secondary\" />,\n      path: \"/\",\n    },\n    {\n      text: \"Add Book\",\n      icon: <AddCircleOutlineOutlined color=\"secondary\" />,\n      path: \"/create\",\n    },\n  ];\n  const drawerWidth = 240;\n  const classes = {\n    page: {\n      background: \"#f9f9f9\",\n      width: \"100%\",\n    },\n    drawer: {\n      width: drawerWidth,\n      \"& .MuiDrawer-paper\": {\n        width: drawerWidth,\n      },\n    },\n    root: {\n      display: \"flex\",\n    },\n    active: {\n      background: \"#f4f4f4\",\n    },\n  };\n  const history = useHistory();\n  const location = useLocation();\n\n  return (\n    <Box sx={classes.root}>\n      <Drawer sx={classes.drawer} variant=\"permanent\" anchor=\"left\">\n        <div>\n          <Typography variant=\"h5\">Book List</Typography>\n        </div>\n\n        {/* List / Links */}\n        <List>\n          {menuItems.map((item) => (\n            <ListItem\n              button\n              key={item.text}\n              onClick={() => history.push(item.path)}\n              sx={location.pathname === item.path ? classes.active : null}\n            >\n              <ListItemIcon>{item.icon}</ListItemIcon>\n              <ListItemText primary={item.text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n\n      <div style={classes.page}>{children}</div>\n    </Box>\n  );\n}\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Books from \"./pages/Books\";\nimport Create from \"./pages/Create\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { pink } from \"@material-ui/core/colors\";\nimport Layout from \"./components/Layout\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#f44336\",\n    },\n    secondary: pink,\n  },\n  typography: {\n    fontFamily: \"Inconsolata\",\n    fontWeightLight: 200,\n    fontWeightRegular: 300,\n    fontWeightMedium: 400,\n    fontWeightBold: 500,\n  },\n});\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/\">\n              <Books />\n            </Route>\n            <Route path=\"/create\">\n              <Create />\n            </Route>\n          </Switch>\n        </Layout>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}